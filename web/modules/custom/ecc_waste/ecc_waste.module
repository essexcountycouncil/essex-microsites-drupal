<?php

use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\Plugin\views\cache\CachePluginBase;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Primary module hooks for ECC Waste module.
 */

 /**
  * Implements hook_views_post_render()
  *
  * Adds custom styles to the view.
  */
function ecc_waste_views_post_render(ViewExecutable $view, array &$output, CachePluginBase $cache) {
  if ($view->id() == 'disposal_options') {
    $output['#attached']['library'][] = 'ecc_waste/ecc_waste';
  }
}

/**
 * Alter the query before it is executed.
 *
 * @param \Drupal\views\ViewExecutable $view
 *   The view object about to be processed.
 * @param \Drupal\views\Plugin\views\query\QueryPluginBase $query
 *   The query plugin object for the query.
 *
 * @see hook_views_query_substitutions()
 * @see \Drupal\views\Plugin\views\query\Sql
 *
 */
function ecc_waste_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // A bit redundant because its use is now achieved via views aggregation.
}

/**
 * Implements template_preprocess_node()
 *
 * Do not print a map if there's no location to show.
 * Print external url if there is one.
 *
 * @param  [array] $variables
 * @return void
 */
function ecc_waste_preprocess_node (&$variables) {
  if ($variables['node']->getType() === 'waste_disposal_option') {
    if ($variables['view_mode'] === 'full') {
      $location = $variables['node']->get('field_disposal_option_location')->value;
      if (empty($location)) {
        unset($variables['content']['field_disposal_option_location']);
      }
    }

    $url = $variables['node']->get('field_disposal_option_url')->uri;
    if (!empty($url)) {
      $variables['url'] = $url;
      unset($variables['content']['field_disposal_option_url']);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function ecc_waste_form_node_waste_disposal_option_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $form['#attached']['library'][] = 'ecc_waste/ecc_waste';
  $form['field_disposal_option_items']['checkbox_search'] = [
    '#type' => 'textfield',
    '#title' => t('Filter waste items'),
    '#weight' => 0,
    '#placeholder' => t('Start typing'),
  ];
  $form['field_disposal_option_items']['widget']['#weight'] = 1;
}


/**
 * Implements hook_views_data_alter().
 */
function ecc_waste_views_data_alter(array &$data) {
  // Modify $data to include the necessary filter.
  $data['views']['postcode_search_custom_filter'] = [
    'title' =>  t('Postcode'),
    'filter' => [
      'title' => t('Postcode'),
      'field' => 'id',
      'id' => 'postcode_filter',
    ],
  ];
}
